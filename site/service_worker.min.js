
var SWO_o={cache_s:"progressiVecontent_1",DOC_JS_s:"https://progressivecontent.netlify.app//assets/data/js/docs_data.js",LAB_JS_s:"https://progressivecontent.netlify.app//assets/data/js/labels_data.js",url_a:["https://progressivecontent.netlify.app/","https://progressivecontent.netlify.app/index.html","https://progressivecontent.netlify.app/assets/scripts/js/index.min.js","https://progressivecontent.netlify.app/favicon.ico"],cache_a:new Set,nocache_a:["/","/index.html","/sys/docs.html"],types_a:["REGISTER","LOAD","ROUTE","RESTORE","REMOVE"],pathname_s:"",install__v(e){e.waitUntil(void async function(){const e=await caches.open(SWO_o.cache_s);await e.addAll(SWO_o.url_a),self.skipWaiting()}())},activate__v(e){e.waitUntil(void async function(){const e=await caches.keys(),t=await e.filter((e=>e!==SWO_o.cache_s));await Promise.all(t.map((e=>caches.delete(e)))),self.clients.claim()}())},fetch__v(e){if("navigate"===e?.request?.mode)try{e.respondWith(async function(){const t=SWO_o.ROUTE__v(new URL(e.request.url)),s=fetch(t),a=s.then((e=>e.clone()));return e.waitUntil(async function(){const e=await caches.open(SWO_o.cache_s);await e.put(t,await a)}()),await caches.match(t)||s}())}catch(e){const t=caches.open(SWO_o.cache_s);return t&&t.match(new Request("https://progressivecontent.netlify.app/offline.html"))}},REGISTER__v(){SWO_o.send__v("REGISTER",!0)},LOAD__v(e){SWO_o.cache__v(e.slice("?s=/".length-1))},ROUTE__v(e){let t=e.pathname,s=e.search;return s&&(t=s.slice("?s=/".length-1)),SWO_o.cache__v(t),e},RESTORE__v(e){const t=Array.from(SWO_o.cache_a);if(!t.length)return;const s=[];for(let e of t){const t=SWO_o.pathSlot__s(e);s.push(t.split("/"))}SWO_o.send__v("RESTORE",s)},REMOVE__v(e){SWO_o.cache_a.delete(`/slots/${e}.html`)},cache__v(e){e&&!SWO_o.nocache_a.includes(e)&&SWO_o.cache_a.add(e)},pathSlot__s:e=>e.slice(1,-".html".length),client__o:(e=0)=>self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then((t=>t&&t.length?t[e]:void console.log("No Service Worker client found"))),receive__v(e){if(!e.data)return console.log("An unidentified message has been sent by the Main Thread");const t=e.data.type_s;if(!SWO_o.types_a.includes(t))return console.log("An unknown message type has been sent by the Main Thread");SWO_o[t+"__v"](e.data.payload_o)},send__v(e,t){SWO_o.client__o().then((s=>{s&&s.postMessage({type_s:e,payload_o:t})}))},import__v(){self.importScripts(SWO_o.DOC_JS_s,SWO_o.LAB_JS_s)},init__v(){["install","activate","fetch"].forEach((e=>self.addEventListener(e,(t=>SWO_o[e+"__v"](t))))),self.addEventListener("message",SWO_o.receive__v),SWO_o.REGISTER__v()}};SWO_o.init__v();